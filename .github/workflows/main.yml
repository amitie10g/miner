name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      ubuntu_version:
        description: 'Ubuntu version'
        required: true
        default: '24.04'
        type: choice
        options:
          - '24.04'
          - '22.04'
      cuda_version:
        description: 'CUDA version'
        required: true
        default: '12.9.1'
        type: choice
        options:
          - '12.9.1'
          - '11.8.0'
      latest_release:
        description: 'Set this buuild as latest release'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

  schedule:
  - cron: '0 4 * * 1'

permissions:
  actions:  write
  contents: read
  packages: write

jobs:
  Build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: ghcr.io/amitie10g/binfmt:latest
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=ghcr.io/amitie10g/buildkit:master
    - name: Set tags metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/miner
        tags: |
          ${{ inputs.cuda-version }}-${{ inputs.ubuntu_version }}
          ${{ inputs.latest_release == 'true' && 'latest' || '' }}
    - name: Build And Push Docker Image
      uses: docker/build-push-action@v5
      id: build
      with:
        push: true
        context: .
        build-args: |
          UBUNTU_VERSION=${{ inputs.ubuntu_version }}
          CUDA_VERSION=${{ inputs.cuda_version }}
        cache-to: type=inline
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
